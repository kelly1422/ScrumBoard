{"ast":null,"code":"var _jsxFileName = \"/root/noMajor/client/src/BoardWriteForm.js\";\nimport React, { Component } from \"react\";\nimport CKEditor from 'ckeditor4-react';\nimport { Button, Form, FormText } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport \"jquery.cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass BoardWriteForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: \"\"\n    };\n\n    this.writeBoard = () => {\n      let url;\n      let send_param;\n      const boardTitle = this.boardTitle.value;\n      const boardContent = this.state.data;\n\n      if (boardTitle === undefined || boardTitle === \"\") {\n        alert(\"글 제목을 입력 해주세요.\");\n        boardTitle.focus();\n        return;\n      } else if (boardContent === undefined || boardContent === \"\") {\n        alert(\"글 내용을 입력 해주세요.\");\n        boardContent.focus();\n      }\n\n      if (this.props.location.query !== undefined) {\n        url = \"http://172.10.18.147:80/board/update\";\n        send_param = {\n          headers,\n          \"_id\": this.props.location.query._id,\n          \"title\": boardTitle,\n          \"content\": boardContent\n        };\n      } else {\n        url = \"http://172.10.18.147:80/board/write\";\n        send_param = {\n          headers,\n          \"_id\": $.cookie(\"login_id\"),\n          \"title\": boardTitle,\n          \"content\": boardContent\n        };\n      }\n\n      axios.post(url, send_param) //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          alert(returnData.data.message);\n          window.location.href = \"/\";\n        } else {\n          alert(\"글쓰기 실패\");\n        }\n      }) //에러\n      .catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onEditorChange = evt => {\n      this.setState({\n        data: evt.editor.getData()\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.query !== undefined) {\n      this.boardTitle.value = this.props.location.query.title;\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.location.query !== undefined) {\n      this.setState({\n        data: this.props.location.query.content\n      });\n    }\n  }\n\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    const titleStyle = {\n      marginBottom: 5\n    };\n    const buttonStyle = {\n      marginTop: 5\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        style: titleStyle,\n        placeholder: \"\\uAE00 \\uC81C\\uBAA9\",\n        ref: ref => this.boardTitle = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        data: this.state.data,\n        onChange: this.onEditorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: buttonStyle,\n        onClick: this.writeBoard,\n        block: true,\n        children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BoardWriteForm;","map":{"version":3,"sources":["/root/noMajor/client/src/BoardWriteForm.js"],"names":["React","Component","CKEditor","Button","Form","FormText","axios","$","defaults","withCredentials","headers","BoardWriteForm","state","data","writeBoard","url","send_param","boardTitle","value","boardContent","undefined","alert","focus","props","location","query","_id","cookie","post","then","returnData","message","window","href","catch","err","console","log","onEditorChange","evt","setState","editor","getData","componentDidMount","title","componentWillMount","content","render","divStyle","margin","titleStyle","marginBottom","buttonStyle","marginTop","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CKEditor from 'ckeditor4-react';\nimport { Button, Form, FormText} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardWriteForm extends Component {\n  state = {\n    data: \"\"\n  };\n\n  componentDidMount() {\n    if (this.props.location.query !== undefined) {\n      this.boardTitle.value = this.props.location.query.title;\n    }\n  }\n\n  componentWillMount(){\n    if (this.props.location.query !== undefined) {\n      this.setState({\n        data: this.props.location.query.content\n      });\n    }\n  }\n\n  writeBoard = () => {\n    let url;\n    let send_param;\n\n    const boardTitle = this.boardTitle.value;\n    const boardContent = this.state.data;\n\n    if (boardTitle === undefined || boardTitle === \"\") {\n      alert(\"글 제목을 입력 해주세요.\");\n      boardTitle.focus();\n      return;\n    } else if (boardContent === undefined || boardContent === \"\") {\n      alert(\"글 내용을 입력 해주세요.\");\n      boardContent.focus();\n    }\n    \n    if (this.props.location.query !== undefined) {\n      url = \"http://172.10.18.147:80/board/update\";\n      send_param = {\n        headers,\n        \"_id\" : this.props.location.query._id,\n        \"title\": boardTitle,\n        \"content\": boardContent\n      };\n    } else {\n      url = \"http://172.10.18.147:80/board/write\";\n      send_param = {\n        headers,\n        \"_id\" : $.cookie(\"login_id\"),\n        \"title\": boardTitle,\n        \"content\": boardContent\n      };\n\n    }\n\n    axios\n      .post(url, send_param)\n      //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          alert(returnData.data.message);\n          window.location.href = \"/\";\n        } else {\n          alert(\"글쓰기 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onEditorChange = evt => {\n    this.setState({\n      data:evt.editor.getData()\n    });\n  };\n\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    const titleStyle = {\n      marginBottom: 5\n    };\n    const buttonStyle = {\n      marginTop: 5\n    };\n\n    return (\n      <div style={divStyle} className=\"App\">\n        <h2>글쓰기</h2>\n        <Form.Control\n          type=\"text\"\n          style={titleStyle}\n          placeholder=\"글 제목\"\n          ref={ref => (this.boardTitle = ref)}\n        />\n        <textarea\n          data={this.state.data}\n          onChange={this.onEditorChange}\n        ></textarea>\n        <Button style={buttonStyle} onClick={this.writeBoard} block>\n          저장하기\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default BoardWriteForm;"]},"metadata":{},"sourceType":"module"}