{"ast":null,"code":"var _jsxFileName = \"/root/notice_board_web/test/src/BoardDetail.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Comment from \"./Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass BoardDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      subject: \"\",\n      board: []\n    };\n\n    this.deleteBoard = _id => {\n      const send_param = {\n        headers,\n        _id\n      };\n\n      if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n        axios.post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n        //정상 수행\n        .then(returnData => {\n          alert(\"게시글이 삭제 되었습니다.\");\n          window.location.href = \"/\";\n        }) //에러\n        .catch(err => {\n          console.log(err);\n          alert(\"글 삭제 실패\");\n        });\n      }\n    };\n\n    this.getComment = () => {\n      const tableId = this.props.tableId;\n      const send_param = {\n        headers,\n        _id: this.props.location.query._id,\n        tableId: tableId\n      };\n      axios.post(\"http://172.10.18.147:80/comment/getCommentList\", send_param).then(returnData => {\n        if (returnData.data.success) {\n          const comment = /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: returnData.data.comment[0].title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    dangerouslySetInnerHTML: {\n                      __html: returnData.data.comment[0].content\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }, this);\n        } else {\n          alert('코멘트 정보를 가져오는 것을 실패하였습니다.');\n        }\n      });\n    };\n\n    this.getDetail = () => {\n      const send_param = {\n        headers,\n        _id: this.props.location.query._id\n      };\n      axios.post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n      //정상 수행\n      .then(returnData => {\n        //받아온 보드 데이터들 \n        if (returnData.data.board[0]) {\n          //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n          const board =\n          /*#__PURE__*/\n          //받아온 보드 데이터를 아래 형식으로 표현\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: returnData.data.board[0].title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    dangerouslySetInnerHTML: {\n                      //\n                      __html: returnData.data.board[0].content\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: {\n                  pathname: \"/boardWrite\",\n                  query: {\n                    title: returnData.data.board[0].title,\n                    content: returnData.data.board[0].content,\n                    _id: this.props.location.query._id\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  block: true,\n                  className: \"my-3\",\n                  children: \"\\uAE00 \\uC218\\uC815\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                className: \"my-3\",\n                onClick: this.deleteBoard.bind(null, this.props.location.query._id),\n                children: \"\\uAE00 \\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this);\n\n          this.setState({\n            subject: returnData.data.board[0].title,\n            board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n\n          });\n        } else {\n          alert(\"글 상세 조회 실패\");\n        }\n      }) //에러\n      .catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (this.props.location.query !== undefined) {\n      //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n      this.getDetail();\n    } else {\n      window.location.href = \"/\";\n    }\n  }\n\n  //onClick={this.getBoard.bind(null,this.props._id)}\n  render() {\n    const divStyle = {\n      marginTop: 30,\n      marginLeft: 200,\n      marginRight: 200,\n      marginBottom: 50\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Subject : \", this.state.subject]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: this.state.board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this); //this.state.board 에 테이블이 들어감\n  }\n\n}\n\nexport default BoardDetail;","map":{"version":3,"sources":["/root/notice_board_web/test/src/BoardDetail.js"],"names":["React","Component","Table","Button","NavLink","axios","Comment","defaults","withCredentials","headers","BoardDetail","state","subject","board","deleteBoard","_id","send_param","window","confirm","post","then","returnData","alert","location","href","catch","err","console","log","getComment","tableId","props","query","data","success","comment","title","__html","content","getDetail","pathname","bind","setState","componentDidMount","undefined","render","divStyle","marginTop","marginLeft","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Comment from \"./Comment\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardDetail extends Component {\n  state = {\n    subject:\"\",\n    board: []\n  };\n\n  componentDidMount() { //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (this.props.location.query !== undefined) { //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n      this.getDetail();\n    } else {\n      window.location.href = \"/\";\n    }\n  }\n\n  deleteBoard = _id => {\n    const send_param = {\n      headers,\n      _id\n    };\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios\n        .post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n        //정상 수행\n        .then(returnData => {\n          alert(\"게시글이 삭제 되었습니다.\");\n          window.location.href = \"/\";\n        })\n        //에러\n        .catch(err => {\n          console.log(err);\n          alert(\"글 삭제 실패\");\n        });\n    }\n  };\n\n  getComment =() =>{\n\n    const tableId = this.props.tableId;\n    const send_param ={\n    headers,\n    _id: this.props.location.query._id,\n    tableId: tableId\n    }\n    axios.post(\"http://172.10.18.147:80/comment/getCommentList\", send_param)\n    .then(returnData=>{\n    if(returnData.data.success){\n    const comment=(\n    <div>\n    <Table striped bordered hover>\n    <thead>\n    <tr>\n    <th>{returnData.data.comment[0].title}</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n    <td\n    dangerouslySetInnerHTML={{\n    __html: returnData.data.comment[0].content\n    }}\n    ></td>\n    </tr>\n    </tbody>\n    </Table>\n    </div>\n    )\n    }else{\n    alert('코멘트 정보를 가져오는 것을 실패하였습니다.')\n    }\n    })\n    }\n\n  getDetail = () => {\n    const send_param = {\n      headers,\n      _id: this.props.location.query._id\n    };\n    axios\n      .post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n      //정상 수행\n      .then(returnData => { //받아온 보드 데이터들 \n        if (returnData.data.board[0]) { //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n          const board = ( //받아온 보드 데이터를 아래 형식으로 표현\n            <div>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>{returnData.data.board[0].title}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td\n                      dangerouslySetInnerHTML={{ //\n                        __html: returnData.data.board[0].content\n                      }}\n                    ></td>\n                  </tr>\n                </tbody>\n              </Table>\n\n              <Comment/>\n\n              <div>\n                <NavLink\n                  to={{\n                    pathname: \"/boardWrite\",\n                    query: {\n                      title: returnData.data.board[0].title,\n                      content: returnData.data.board[0].content,\n                      _id: this.props.location.query._id\n                    }\n                  }}\n                >\n                  <Button block className=\"my-3\">\n                    글 수정\n                  </Button>\n                </NavLink>\n                <Button\n                  block\n                  className=\"my-3\"\n                  onClick={this.deleteBoard.bind(\n                    null,\n                    this.props.location.query._id\n                  )}\n                >\n                  글 삭제\n                </Button>\n              </div>\n            </div>\n          );\n          this.setState({\n            subject: returnData.data.board[0].title,\n            board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n          });\n        } else {\n          alert(\"글 상세 조회 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //onClick={this.getBoard.bind(null,this.props._id)}\n  render() {\n    const divStyle = {\n      marginTop: 30,\n      marginLeft:200,\n      marginRight:200,\n      marginBottom:50\n    };\n    return (\n      <div>\n      <h2><strong>Subject : {this.state.subject}</strong></h2>\n      <div style={divStyle}>{this.state.board}</div>\n      </div>\n    ); //this.state.board 에 테이블이 들어감\n  }\n}\n\nexport default BoardDetail;"]},"metadata":{},"sourceType":"module"}