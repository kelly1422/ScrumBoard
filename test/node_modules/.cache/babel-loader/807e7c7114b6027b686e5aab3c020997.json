{"ast":null,"code":"var _jsxFileName = \"/root/notice_board_web/test/src/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\nimport axios from \"axios\"; //http 라이브러리, http를 비동기 통신할때?\n\nimport $ from \"jquery\";\nimport \"jquery.cookie\"; //로그인, 로그아웃 처리 할때 (쿠키 있 : 게시글 보여줌 / 쿠키 없 : 로그인, 회원가입 창 보여줌)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.verifyCallback = recaptchaToken => {\n      // Here you will get the final recaptchaToken!!!\n      console.log(recaptchaToken, \"<= your recaptcha token\");\n    };\n\n    this.join = () => {\n      const joinEmail = this.joinEmail.value;\n      const joinName = this.joinName.value;\n      const joinPw = this.joinPw.value;\n      const regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n      const regExp2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\n\n      if (joinEmail === \"\" || joinEmail === undefined) {\n        alert(\"이메일 주소를 입력해주세요.\");\n        this.joinEmail.focus();\n        return;\n      } else if (joinEmail.match(regExp) === null || joinEmail.match(regExp) === undefined) {\n        alert(\"이메일 형식에 맞게 입력해주세요.\");\n        this.joinEmail.value = \"\";\n        this.joinEmail.focus();\n        return;\n      } else if (joinName === \"\" || joinName === undefined) {\n        alert(\"이름을 입력해주세요.\");\n        this.joinName.focus();\n        return;\n      } else if (joinPw === \"\" || joinPw === undefined) {\n        alert(\"비밀번호를 입력해주세요.\");\n        this.joinPw.focus();\n        return;\n      } else if (joinPw.match(regExp2) === null || joinPw.match(regExp2) === undefined) {\n        alert(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\n        this.joinPw.value = \"\";\n        this.joinPw.focus();\n        return;\n      }\n\n      const send_param = {\n        //파라미터들을 모아놓은 send_param 변수를 보내는 ?\n        headers,\n        //동일 기원..? 통신 할때만다 먼저 넘겨주기\n        email: this.joinEmail.value,\n        name: this.joinName.value,\n        password: this.joinPw.value\n      };\n      axios.post(\"http://192.249.18.151:80/member/join\", send_param) //정상 수행\n      .then(returnData => {\n        //돌아온 데이터 체크\n        if (returnData.data.message) {\n          alert(returnData.data.message); //이메일 중복 체크\n\n          if (returnData.data.dupYn === \"1\") {\n            //이메일이 중복이면 \n            this.joinEmail.value = \"\"; //이메일 입력칸에 입력되어있는거 초기화\n\n            this.joinEmail.focus(); //이메일 입력란에 포커스, 바로 다시 입력할 수 있게\n          } else {\n            //중복아니면 디비에 저장되고 모든 값을 초기화\n            this.joinEmail.value = \"\";\n            this.joinName.value = \"\";\n            this.joinPw.value = \"\";\n          }\n        } else {\n          alert(\"회원가입 실패\");\n        }\n      }) //에러\n      .catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.login = () => {\n      const loginEmail = this.loginEmail.value;\n      const loginPw = this.loginPw.value;\n\n      if (loginEmail === \"\" || loginEmail === undefined) {\n        alert(\"이메일 주소를 입력해주세요.\");\n        this.loginEmail.focus();\n        return;\n      } else if (loginPw === \"\" || loginPw === undefined) {\n        alert(\"비밀번호를 입력해주세요.\");\n        this.loginPw.focus();\n        return;\n      }\n\n      const send_param = {\n        headers,\n        email: this.loginEmail.value,\n        //키값 : 벨류값\n        password: this.loginPw.value //키값 : 벨류값\n\n      };\n      axios //비동기 통신\n      .post(\"http://192.249.18.151:80/member/login\", send_param) //서버에 저 url 주소 보내주기\n      //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          // console.log(\"login_id:\" + returnData.data._id);\n          $.cookie(\"login_id\", returnData.data._id, {\n            expires: 1\n          });\n          $.cookie(\"login_name\", returnData.data.name, {\n            expires: 1\n          });\n          $.cookie(\"login_email\", returnData.data.email, {\n            expires: 1\n          }); //로그인 되면 쿠키값을 설정해줌 -> 쿠키값 여부로 로그인 여부 확인\n\n          alert(returnData.data.message);\n          window.location.reload(); //로그인 된 상태의 화면으로 새로고침\n        } else {\n          alert(returnData.data.message); //로그인 실패\n        }\n      }) //에러\n      .catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    loadReCaptcha(\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\");\n  }\n\n  render() {\n    const formStyle = {\n      margin: 50\n    };\n    const buttonStyle = {\n      marginTop: 10\n    };\n    const divStyle1 = {\n      float: \"left\",\n      marginTop: 60,\n      marginLeft: 100,\n      marginBottom: 40\n    };\n    const divStyle2 = {\n      float: \"left\",\n      marginTop: 60,\n      marginRight: 100,\n      marginBottom: 40\n    };\n    return /*#__PURE__*/_jsxDEV(Form, {\n      style: formStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle1,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"joinForm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            maxLength: \"100\",\n            ref: ref => this.joinEmail = ref,\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We'll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            maxLength: \"20\",\n            ref: ref => this.joinName = ref,\n            placeholder: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            maxLength: \"64\",\n            ref: ref => this.joinPw = ref //아이디값 부여\n            ,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: buttonStyle,\n            onClick: this.join,\n            variant: \"primary\",\n            type: \"button\",\n            block: true,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle2,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"loginForm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            maxLength: \"100\",\n            ref: ref => this.loginEmail = ref,\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            maxLength: \"20\",\n            ref: ref => this.loginPw = ref,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ReCaptcha, {\n            sitekey: \"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\",\n            action: \"login\",\n            verifyCallback: this.verifyCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: buttonStyle,\n            onClick: this.login,\n            variant: \"primary\",\n            type: \"button\",\n            block: true,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/root/notice_board_web/test/src/LoginForm.js"],"names":["React","Component","Form","Button","loadReCaptcha","ReCaptcha","axios","$","defaults","withCredentials","headers","LoginForm","verifyCallback","recaptchaToken","console","log","join","joinEmail","value","joinName","joinPw","regExp","regExp2","undefined","alert","focus","match","send_param","email","name","password","post","then","returnData","data","message","dupYn","catch","err","login","loginEmail","loginPw","cookie","_id","expires","window","location","reload","componentDidMount","render","formStyle","margin","buttonStyle","marginTop","divStyle1","float","marginLeft","marginBottom","divStyle2","marginRight","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\nimport axios from \"axios\"; //http 라이브러리, http를 비동기 통신할때?\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\"; //로그인, 로그아웃 처리 할때 (쿠키 있 : 게시글 보여줌 / 쿠키 없 : 로그인, 회원가입 창 보여줌)\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass LoginForm extends Component {\n  componentDidMount() {\n    loadReCaptcha(\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\");\n  }\n\n  verifyCallback = recaptchaToken => {\n    // Here you will get the final recaptchaToken!!!\n    console.log(recaptchaToken, \"<= your recaptcha token\");\n  };\n\n  join = () => {\n    const joinEmail = this.joinEmail.value;\n    const joinName = this.joinName.value;\n    const joinPw = this.joinPw.value;\n    const regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    const regExp2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\n    if (joinEmail === \"\" || joinEmail === undefined) {\n      alert(\"이메일 주소를 입력해주세요.\");\n      this.joinEmail.focus();\n      return;\n    } else if (\n      joinEmail.match(regExp) === null ||\n      joinEmail.match(regExp) === undefined\n    ) {\n      alert(\"이메일 형식에 맞게 입력해주세요.\");\n      this.joinEmail.value = \"\";\n      this.joinEmail.focus();\n      return;\n    } else if (joinName === \"\" || joinName === undefined) {\n      alert(\"이름을 입력해주세요.\");\n      this.joinName.focus();\n      return;\n    } else if (joinPw === \"\" || joinPw === undefined) {\n      alert(\"비밀번호를 입력해주세요.\");\n      this.joinPw.focus();\n      return;\n    } else if (\n      joinPw.match(regExp2) === null ||\n      joinPw.match(regExp2) === undefined\n    ) {\n      alert(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\n      this.joinPw.value = \"\";\n      this.joinPw.focus();\n      return;\n    }\n\n    const send_param = { //파라미터들을 모아놓은 send_param 변수를 보내는 ?\n      headers,     //동일 기원..? 통신 할때만다 먼저 넘겨주기\n      email: this.joinEmail.value,\n      name: this.joinName.value,\n      password: this.joinPw.value\n    };\n    axios\n      .post(\"http://192.249.18.151:80/member/join\", send_param)\n      //정상 수행\n      .then(returnData => { //돌아온 데이터 체크\n        if (returnData.data.message) {\n          alert(returnData.data.message);\n          //이메일 중복 체크\n          if (returnData.data.dupYn === \"1\") { //이메일이 중복이면 \n            this.joinEmail.value = \"\"; //이메일 입력칸에 입력되어있는거 초기화\n            this.joinEmail.focus(); //이메일 입력란에 포커스, 바로 다시 입력할 수 있게\n          } else { //중복아니면 디비에 저장되고 모든 값을 초기화\n            this.joinEmail.value = \"\";\n            this.joinName.value = \"\";\n            this.joinPw.value = \"\";\n          }\n        } else {\n          alert(\"회원가입 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  login = () => {\n    const loginEmail = this.loginEmail.value;\n    const loginPw = this.loginPw.value;\n\n    if (loginEmail === \"\" || loginEmail === undefined) {\n      alert(\"이메일 주소를 입력해주세요.\");\n      this.loginEmail.focus();\n      return;\n    } else if (loginPw === \"\" || loginPw === undefined) {\n      alert(\"비밀번호를 입력해주세요.\");\n      this.loginPw.focus();\n      return;\n    }\n\n    const send_param = {\n      headers,\n      email: this.loginEmail.value, //키값 : 벨류값\n      password: this.loginPw.value //키값 : 벨류값\n    };\n    axios //비동기 통신\n      .post(\"http://192.249.18.151:80/member/login\", send_param) //서버에 저 url 주소 보내주기\n      //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          // console.log(\"login_id:\" + returnData.data._id);\n          $.cookie(\"login_id\", returnData.data._id, { expires: 1 });\n          $.cookie(\"login_name\", returnData.data.name, { expires: 1 });\n          $.cookie(\"login_email\", returnData.data.email, { expires: 1 }); //로그인 되면 쿠키값을 설정해줌 -> 쿠키값 여부로 로그인 여부 확인\n          alert(returnData.data.message);\n          window.location.reload(); //로그인 된 상태의 화면으로 새로고침\n        } else {\n          alert(returnData.data.message); //로그인 실패\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    const formStyle = {\n      margin: 50\n    };\n    const buttonStyle = {\n      marginTop: 10\n    };\n    const divStyle1 ={\n      float: \"left\",\n      marginTop : 60,\n      marginLeft : 100,\n      marginBottom : 40\n      \n    };\n    const divStyle2 ={\n      float: \"left\",\n      marginTop : 60,\n      marginRight : 100,\n      marginBottom : 40\n      \n    };\n\n    return (\n      <Form style={formStyle}>\n        <div style={divStyle1}>\n        <Form.Group controlId=\"joinForm\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            maxLength=\"100\"\n            ref={ref => (this.joinEmail = ref)}\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\">\n            <p>We'll never share your email with anyone else.</p>\n          </Form.Text>\n          <Form.Label>name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            maxLength=\"20\"\n            ref={ref => (this.joinName = ref)}\n            placeholder=\"name\"\n          />\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            maxLength=\"64\"\n            ref={ref => (this.joinPw = ref)} //아이디값 부여\n            placeholder=\"Password\"\n          />\n          <Button\n            style={buttonStyle}\n            onClick={this.join}\n            variant=\"primary\"\n            type=\"button\"\n            block\n          >\n            회원가입\n          </Button>\n        </Form.Group>\n        </div>\n\n        <div style={divStyle2}>\n        <Form.Group controlId=\"loginForm\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            maxLength=\"100\"\n            ref={ref => (this.loginEmail = ref)}\n            placeholder=\"Enter email\"\n          />\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            maxLength=\"20\"\n            ref={ref => (this.loginPw = ref)}\n            placeholder=\"Password\"\n          />\n          <ReCaptcha\n            sitekey=\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\"\n            action=\"login\"\n            verifyCallback={this.verifyCallback}\n          />\n          <Button\n            style={buttonStyle}\n            onClick={this.login}\n            variant=\"primary\"\n            type=\"button\"\n            block\n          >\n            로그인\n          </Button>\n        </Form.Group>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}