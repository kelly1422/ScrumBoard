{"ast":null,"code":"var _jsxFileName = \"/root/notice_board_web/test/src/BoardDetail.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass BoardDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      board: []\n    };\n\n    this.deleteBoard = _id => {\n      const send_param = {\n        headers,\n        _id\n      };\n\n      if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n        axios.post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n        //정상 수행\n        .then(returnData => {\n          alert(\"게시글이 삭제 되었습니다.\");\n          window.location.href = \"/\";\n        }) //에러\n        .catch(err => {\n          console.log(err);\n          alert(\"글 삭제 실패\");\n        });\n      }\n    };\n\n    this.getDetail = () => {\n      const send_param = {\n        headers,\n        _id: this.props.location.query._id\n      };\n      const marginBottom = {\n        marginBottom: 5\n      };\n      axios.post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n      //정상 수행\n      .then(returnData => {\n        //받아온 보드 데이터들 \n        if (returnData.data.board[0]) {\n          //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n          const board =\n          /*#__PURE__*/\n          //받아온 보드 데이터를 아래 형식으로 표현\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: returnData.data.board[0].title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    dangerouslySetInnerHTML: {\n                      //\n                      __html: returnData.data.board[0].content\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: {\n                  pathname: \"/boardWrite\",\n                  query: {\n                    title: returnData.data.board[0].title,\n                    content: returnData.data.board[0].content,\n                    _id: this.props.location.query._id\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  block: true,\n                  className: \"my-3\",\n                  children: \"\\uAE00 \\uC218\\uC815\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                onClick: this.deleteBoard.bind(null, this.props.location.query._id),\n                children: \"\\uAE00 \\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this);\n\n          this.setState({\n            board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n\n          });\n        } else {\n          alert(\"글 상세 조회 실패\");\n        }\n      }) //에러\n      .catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (this.props.location.query !== undefined) {\n      //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n      this.getDetail();\n    } else {\n      window.location.href = \"/\";\n    }\n  }\n\n  //onClick={this.getBoard.bind(null,this.props._id)}\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: this.state.board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this); //this.state.board 에 테이블이 들어감\n  }\n\n}\n\nexport default BoardDetail;","map":{"version":3,"sources":["/root/notice_board_web/test/src/BoardDetail.js"],"names":["React","Component","Table","Button","NavLink","axios","defaults","withCredentials","headers","BoardDetail","state","board","deleteBoard","_id","send_param","window","confirm","post","then","returnData","alert","location","href","catch","err","console","log","getDetail","props","query","marginBottom","data","title","__html","content","pathname","bind","setState","componentDidMount","undefined","render","divStyle","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardDetail extends Component {\n  state = {\n    board: []\n  };\n\n  componentDidMount() { //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (this.props.location.query !== undefined) { //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n      this.getDetail();\n    } else {\n      window.location.href = \"/\";\n    }\n  }\n\n  deleteBoard = _id => {\n    const send_param = {\n      headers,\n      _id\n    };\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios\n        .post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n        //정상 수행\n        .then(returnData => {\n          alert(\"게시글이 삭제 되었습니다.\");\n          window.location.href = \"/\";\n        })\n        //에러\n        .catch(err => {\n          console.log(err);\n          alert(\"글 삭제 실패\");\n        });\n    }\n  };\n\n  getDetail = () => {\n    const send_param = {\n      headers,\n      _id: this.props.location.query._id\n    };\n    const marginBottom = {\n      marginBottom: 5\n    };\n    axios\n      .post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n      //정상 수행\n      .then(returnData => { //받아온 보드 데이터들 \n        if (returnData.data.board[0]) { //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n          const board = ( //받아온 보드 데이터를 아래 형식으로 표현\n            <div>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>{returnData.data.board[0].title}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td\n                      dangerouslySetInnerHTML={{ //\n                        __html: returnData.data.board[0].content\n                      }}\n                    ></td>\n                  </tr>\n                </tbody>\n              </Table>\n              <div>\n                <NavLink\n                  to={{\n                    pathname: \"/boardWrite\",\n                    query: {\n                      title: returnData.data.board[0].title,\n                      content: returnData.data.board[0].content,\n                      _id: this.props.location.query._id\n                    }\n                  }}\n                >\n                  <Button block className=\"my-3\">\n                    글 수정\n                  </Button>\n                </NavLink>\n                <Button\n                  block\n                  onClick={this.deleteBoard.bind(\n                    null,\n                    this.props.location.query._id\n                  )}\n                >\n                  글 삭제\n                </Button>\n              </div>\n            </div>\n          );\n          this.setState({\n            board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n          });\n        } else {\n          alert(\"글 상세 조회 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //onClick={this.getBoard.bind(null,this.props._id)}\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    return <div style={divStyle}>{this.state.board}</div>; //this.state.board 에 테이블이 들어감\n  }\n}\n\nexport default BoardDetail;"]},"metadata":{},"sourceType":"module"}