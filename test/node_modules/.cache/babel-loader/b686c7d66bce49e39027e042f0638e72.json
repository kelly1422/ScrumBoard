{"ast":null,"code":"var _jsxFileName = \"/root/notice_board_web/test/src/SingleComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Comment, Button, Input } from 'antd';\nimport $ from \"jquery\";\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport renderEmpty from 'antd/lib/config-provider/renderEmpty'; //import {Button} from 'react-bootstrap';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\nconst {\n  TextArea\n} = Input;\n\nfunction SingleComment() {\n  _s();\n\n  const [OpenReply, setOpenReply] = useState(false);\n  const [commentValue, setCommentValue] = useState(\"\");\n\n  const onClickReplyOpen = () => {\n    setOpenReply(!OpenReply);\n  };\n\n  const actions = [/*#__PURE__*/_jsxDEV(\"span\", {\n    onCLick: onClickReplyOpen,\n    children: \"Reply\"\n  }, \"comment-basic-reply-to\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this)];\n  const buttonStyle = {\n    margin: \"0px 5px 0px 10px\"\n  };\n\n  const onHandleChange = event => {\n    setCommentValue(event.currentTarget.commentValue);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const send_param = {\n      content: commentValue,\n      writer: $.cookie(\"login_id\")\n    };\n    const url = 'http://172.10.18.147:80/comment/write';\n    axios.post(url, send_param).then(returnData => {\n      if (returnData.data.message) {\n        alert(returnData.data.message);\n        window.location.href = \"/\";\n      } else {\n        alert(\"글쓰기 실패\");\n      }\n    }) //에러\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getComments = () => {\n    const send_param = {\n      headers,\n      _id: this.props.location.query._id\n    };\n    axios.post(\"http://172.10.18.147:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n    //정상 수행\n    .then(returnData => {\n      //받아온 보드 데이터들 \n      if (returnData.data.comment[0]) {\n        //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n        const board =\n        /*#__PURE__*/\n        //받아온 보드 데이터를 아래 형식으로 표현\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: returnData.data.comment[0].title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  dangerouslySetInnerHTML: {\n                    __html: returnData.data.comment[0].content\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Comment, {\n      actions: actions,\n      author: true,\n      content: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), OpenReply && /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'flex'\n      },\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          width: '100%',\n          borderRadius: '5px'\n        },\n        onChange: onHandleChange,\n        value: commentValue,\n        placeholder: \"\\uB300\\uB313\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: buttonStyle,\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleComment, \"YPP3lJ9dNfYnmLsimHsbaZ1kSsg=\");\n\n_c = SingleComment;\nexport default SingleComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleComment\");","map":{"version":3,"sources":["/root/notice_board_web/test/src/SingleComment.js"],"names":["React","useState","Comment","Button","Input","$","axios","Table","renderEmpty","defaults","withCredentials","headers","TextArea","SingleComment","OpenReply","setOpenReply","commentValue","setCommentValue","onClickReplyOpen","actions","buttonStyle","margin","onHandleChange","event","currentTarget","onSubmit","preventDefault","send_param","content","writer","cookie","url","post","then","returnData","data","message","alert","window","location","href","catch","err","console","log","getComments","_id","props","query","comment","board","title","__html","display","width","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Comment,Button, Input} from 'antd';\nimport $ from \"jquery\";\nimport axios from 'axios';\nimport {Table} from 'react-bootstrap'\nimport renderEmpty from 'antd/lib/config-provider/renderEmpty';\n//import {Button} from 'react-bootstrap';\n\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nconst {TextArea}=Input;\n\nfunction SingleComment() {\n    const [OpenReply, setOpenReply] = useState(false);\n    const [commentValue, setCommentValue] = useState(\"\");\n\n    const onClickReplyOpen = () => {\n        setOpenReply(!OpenReply)\n    }\n\n    const actions =[\n        <span onCLick={onClickReplyOpen} key=\"comment-basic-reply-to\">Reply</span>\n    ]\n\n    const buttonStyle = {\n        margin: \"0px 5px 0px 10px\",\n    };\n\n    const onHandleChange = (event) =>{\n        setCommentValue(event.currentTarget.commentValue)\n    }\n\n    const onSubmit = (event) =>{\n        event.preventDefault();\n\n        const send_param ={\n            content:commentValue,\n            writer:$.cookie(\"login_id\"),\n        }\n\n        const url = 'http://172.10.18.147:80/comment/write';\n\n        axios.post(url, send_param)\n        .then(returnData => {\n            if (returnData.data.message) {\n              alert(returnData.data.message);\n              window.location.href = \"/\";\n            } else {\n              alert(\"글쓰기 실패\");\n            }\n          })\n          //에러\n          .catch(err => {\n            console.log(err);\n          });\n    }\n\n    const getComments = ()=>{\n        const send_param = {\n            headers,\n            _id: this.props.location.query._id\n          };\n        axios\n      .post(\"http://172.10.18.147:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n      //정상 수행\n      .then(returnData => { //받아온 보드 데이터들 \n        if (returnData.data.comment[0]) { //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n          const board = ( //받아온 보드 데이터를 아래 형식으로 표현\n            <div>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>{returnData.data.comment[0].title}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td\n                      dangerouslySetInnerHTML={{ \n                        __html: returnData.data.comment[0].content\n                      }}\n                    ></td>\n                  </tr>\n                </tbody>\n              </Table> \n              </div>)\n        }\n    });\n  \n    \n}\n  return (\n    <div>\n        <Comment\n        actions={actions}\n        author\n        content = {<p></p>}\n        />\n\n        {OpenReply &&\n            <form style={{display:'flex'}} onSubmit={onSubmit}>\n            <textarea \n            style={{width:'100%', borderRadius:'5px'}}\n            onChange={onHandleChange}\n            value={commentValue}\n            placeholder='대댓글 작성하기'/>\n\n            <br/>\n            <Button style={buttonStyle} onClick={onSubmit}>Submit</Button>\n\n            </form>\n        }\n        \n\n    </div>\n)\n\n}\n\nexport default SingleComment\n"]},"metadata":{},"sourceType":"module"}