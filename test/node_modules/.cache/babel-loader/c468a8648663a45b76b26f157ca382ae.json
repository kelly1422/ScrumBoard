{"ast":null,"code":"var _jsxFileName = \"/root/notice_board_web/test/src/BoardWriteForm.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { CKEditor } from \"ckeditor4-react\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport \"jquery.cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass BoardWriteForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: \"\"\n    };\n\n    this.writeBoard = () => {\n      let url;\n      let send_param;\n      const boardTitle = this.boardTitle.value;\n      const boardContent = this.state.data;\n\n      if (boardTitle === undefined || boardTitle === \"\") {\n        alert(\"Enter your project title.\");\n        this.boardTitle.focus();\n        return;\n      } else if (boardContent === undefined || boardContent === \"\") {\n        alert(\"Explain your project.\");\n        return;\n      }\n\n      if (this.props.location.query !== undefined) {\n        //수정하기 버튼을 통해 들어오면 query를 통해 그 글의  _id 값을 보내줌, 그 값이 있으면 \n        url = \"http://192.249.18.151:80/board/update\";\n        send_param = {\n          headers,\n          \"_id\": this.props.location.query._id,\n          \"title\": boardTitle,\n          \"content\": boardContent\n        };\n      } else {\n        url = \"http://192.249.18.151:80/board/write\"; //새로 작성\n\n        send_param = {\n          headers,\n          \"_id\": $.cookie(\"login_id\"),\n          //로그인에 성공해서 생성한 login_id 쿠키값으로 방금 새로 작성한 글의 _id 값을 정해줌\n          \"title\": boardTitle,\n          \"content\": boardContent,\n          \"author\": $.cookie(\"login_name\")\n        };\n      }\n\n      axios.post(url, send_param) //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          alert(returnData.data.message);\n          window.location.href = \"/\";\n        } else {\n          alert(\"글쓰기 실패\");\n        }\n      }) //에러\n      .catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onEditorChange = evt => {\n      this.setState({\n        data: evt.editor.getData()\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.query !== undefined) {\n      this.boardTitle.value = this.props.location.query.title;\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.location.query !== undefined) {\n      this.setState({\n        data: this.props.location.query.content\n      });\n    }\n  }\n\n  render() {\n    const divStyle = {\n      paddingLeft: 150,\n      paddingRight: 150\n    };\n    const titleStyle = {\n      marginBottom: 50,\n      marginTop: 50,\n      marginLeft: 200,\n      marginRight: 200\n    };\n    const buttonStyle = {\n      marginTop: 50,\n      marginBottom: 100\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\\uAE00 \\uC81C\\uBAA9\",\n        ref: ref => this.boardTitle = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        style: titleStyle,\n        data: this.state.data,\n        onChange: this.onEditorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        style: buttonStyle,\n        type: \"button\",\n        onClick: this.writeBoard,\n        children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BoardWriteForm;","map":{"version":3,"sources":["/root/notice_board_web/test/src/BoardWriteForm.js"],"names":["React","Component","Button","Form","CKEditor","axios","$","defaults","withCredentials","headers","BoardWriteForm","state","data","writeBoard","url","send_param","boardTitle","value","boardContent","undefined","alert","focus","props","location","query","_id","cookie","post","then","returnData","message","window","href","catch","err","console","log","onEditorChange","evt","setState","editor","getData","componentDidMount","title","componentWillMount","content","render","divStyle","paddingLeft","paddingRight","titleStyle","marginBottom","marginTop","marginLeft","marginRight","buttonStyle","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { CKEditor } from \"ckeditor4-react\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardWriteForm extends Component {\n  state = {\n    data: \"\"\n  };\n\n  componentDidMount() {\n    if (this.props.location.query !== undefined) {\n      this.boardTitle.value = this.props.location.query.title;\n    }\n  }\n\n  componentWillMount(){\n    if (this.props.location.query !== undefined) {\n      this.setState({\n        data: this.props.location.query.content\n      });\n    }\n  }\n\n  writeBoard = () => {\n    let url;\n    let send_param;\n\n    const boardTitle = this.boardTitle.value;\n    const boardContent = this.state.data;\n\n    if (boardTitle === undefined || boardTitle === \"\") {\n      alert(\"Enter your project title.\");\n      this.boardTitle.focus();\n      return;\n    } else if (boardContent === undefined || boardContent === \"\") {\n      alert(\"Explain your project.\");\n      return;\n    }\n    \n    if (this.props.location.query !== undefined) { //수정하기 버튼을 통해 들어오면 query를 통해 그 글의  _id 값을 보내줌, 그 값이 있으면 \n      url = \"http://192.249.18.151:80/board/update\";\n      send_param = {\n        headers,\n        \"_id\" : this.props.location.query._id,\n        \"title\": boardTitle,\n        \"content\": boardContent\n      };\n    } else {\n      url = \"http://192.249.18.151:80/board/write\"; //새로 작성\n      send_param = {\n        headers,\n        \"_id\" : $.cookie(\"login_id\"),  //로그인에 성공해서 생성한 login_id 쿠키값으로 방금 새로 작성한 글의 _id 값을 정해줌\n        \"title\": boardTitle,\n        \"content\": boardContent,\n        \"author\" : $.cookie(\"login_name\")\n      };\n\n    }\n\n    axios\n      .post(url, send_param)\n      //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          alert(returnData.data.message);\n          window.location.href = \"/\";\n        } else {\n          alert(\"글쓰기 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onEditorChange = evt => {\n    this.setState({\n      data: evt.editor.getData()\n    });\n  };\n\n  render() {\n    const divStyle = {\n      paddingLeft: 150,\n      paddingRight: 150\n    };\n    const titleStyle = {\n      marginBottom: 50,\n      marginTop: 50,\n      marginLeft: 200,\n      marginRight: 200\n    };\n    const buttonStyle = {\n      marginTop: 50,\n      marginBottom: 100\n    };\n\n    return (\n      <div style={divStyle} className=\"App\">\n        <h2>글쓰기</h2>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"글 제목\"\n          ref={ref => (this.boardTitle = ref)}\n        />\n        <CKEditor\n          style={titleStyle}\n          data={this.state.data}\n          onChange={this.onEditorChange}\n        ></CKEditor>\n        <Button block style={buttonStyle} type=\"button\" onClick={this.writeBoard} >\n          저장하기\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default BoardWriteForm;"]},"metadata":{},"sourceType":"module"}