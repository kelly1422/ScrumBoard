[{"/root/molcam3/noMajor/test/src/index.js":"1","/root/molcam3/noMajor/test/src/Header.js":"2","/root/molcam3/noMajor/test/src/Footer.js":"3","/root/molcam3/noMajor/test/src/Body.js":"4","/root/molcam3/noMajor/test/src/LoginForm.js":"5","/root/molcam3/noMajor/test/src/BoardForm.js":"6","/root/molcam3/noMajor/test/src/BoardWriteForm.js":"7","/root/molcam3/noMajor/test/src/UserDetail.js":"8","/root/molcam3/noMajor/test/src/BoardDetail.js":"9","/root/molcam3/noMajor/test/src/MypageForm.js":"10","/root/molcam3/noMajor/test/src/ImageUpload.js":"11"},{"size":374,"mtime":1626781512302,"results":"12","hashOfConfig":"13"},{"size":2436,"mtime":1626783611805,"results":"14","hashOfConfig":"13"},{"size":146,"mtime":1626781512298,"results":"15","hashOfConfig":"13"},{"size":2072,"mtime":1626786338628,"results":"16","hashOfConfig":"13"},{"size":7419,"mtime":1626781899100,"results":"17","hashOfConfig":"13"},{"size":2898,"mtime":1626781512298,"results":"18","hashOfConfig":"13"},{"size":3154,"mtime":1626781512298,"results":"19","hashOfConfig":"13"},{"size":3146,"mtime":1626781512298,"results":"20","hashOfConfig":"13"},{"size":4013,"mtime":1626781512298,"results":"21","hashOfConfig":"13"},{"size":1334,"mtime":1626781512298,"results":"22","hashOfConfig":"13"},{"size":2798,"mtime":1626794365388,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hihb3l",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/root/molcam3/noMajor/test/src/index.js",[],["50","51"],"/root/molcam3/noMajor/test/src/Header.js",[],"/root/molcam3/noMajor/test/src/Footer.js",[],"/root/molcam3/noMajor/test/src/Body.js",[],"/root/molcam3/noMajor/test/src/LoginForm.js",[],"/root/molcam3/noMajor/test/src/BoardForm.js",["52","53"],"import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardRow extends Component {\n  render() {\n    return (\n      <tr font-color=\"black\">\n        <td>\n          <NavLink\n            to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\n          >\n            {this.props.createdAt.substring(0, 10)}\n          </NavLink>\n        </td>\n        <td>\n          <NavLink\n            to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\n          >\n            {this.props.title}\n          </NavLink>\n        </td>\n        <td>\n        <NavLink\n            to={{ pathname: \"/board/userDetail\", query: { author: this.props.author } }}\n          >\n            {this.props.author}\n          </NavLink>\n        </td>\n      </tr>\n    );\n  }\n}\n\nclass BoardForm extends Component {\n  state = {\n    boardList: []\n  };\n\n  componentDidMount() {\n    this.getBoardList();\n  }\n\n  getBoardList = () => {\n    axios\n      .post(\"http://192.249.18.151:80/board/getBoardList\")\n      .then(returnData => {\n        let boardList;\n        console.log(returnData.data);\n        if (returnData.data.list.length > 0) {\n          // console.log(returnData.data.list.length);\n          const boards = returnData.data.list;\n          boardList = boards.map(item => (\n            <BoardRow\n              key={Date.now() + Math.random() * 500}\n              _id={item._id}\n              createdAt={item.createdAt}\n              title={item.title}\n              author={item.author}\n            ></BoardRow>\n          ));\n          // console.log(boardList);\n          this.setState({\n            boardList: boardList\n          });\n        } else {\n          boardList = (\n            <tr>\n              <td colSpan=\"3\">작성한 게시글이 존재하지 않습니다.</td>\n            </tr>\n          );\n          this.setState({\n            boardList: boardList\n          });\n          // window.location.reload();\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const divStyle = {\n      marginTop:65,\n      marginLeft:180,\n      marginRight:200,\n      marginBottom:160\n    };\n\n    return (\n      <div>\n        <h1><strong>SCRUM BOARD</strong></h1>\n        <p>현재까지의 진행상황을 작성해 주세요</p>\n        <div style={divStyle}>\n          <Table warning striped bordered hover>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Title</th>\n                <th>Author</th>\n              </tr>\n            </thead>\n            <tbody>{this.state.boardList}</tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BoardForm;","/root/molcam3/noMajor/test/src/BoardWriteForm.js",[],"/root/molcam3/noMajor/test/src/UserDetail.js",["54"],"import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardRow extends Component {\n    render() {\n        return (\n            <tr>\n            <td>\n            <NavLink\n                to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\n            >\n                {this.props.createdAt.substring(0, 10)}\n            </NavLink>\n            </td>\n            <td>\n            <NavLink\n                to={{ pathname: \"/board/detail\", query: { _id: this.props._id } }}\n            >\n                {this.props.title}\n            </NavLink>\n            </td>\n            </tr>\n        );\n    }\n}\n\nclass UserDetail extends Component {\n  state = {\n    boardList: [],\n    \n    author: \"\"\n  };\n\n  componentDidMount() { //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (this.props.location.query !== undefined) { //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는 쿼리)\n      this.getBoardList(this.props.location.query.author);\n    } else {\n      window.location.href = \"/\";\n    }\n  }\n\n  getBoardList = writer => {\n    //  console.log(writer);\n    const send_param = {\n      headers,\n      author: writer\n    };\n    axios\n      .post(\"http://192.249.18.151:80/board/getBoardListUser\", send_param)\n      .then(returnData => {\n        let boardList;\n        if (returnData.data.list.length > 0) {\n          console.log(returnData.data);\n          // console.log(returnData.data.list.length);\n          const boards = returnData.data.list;\n          boardList = boards.map(item => (\n            <BoardRow\n              key={Date.now() + Math.random() * 500}\n              _id={item._id}\n              createdAt={item.createdAt}\n              title={item.title}\n            ></BoardRow>\n          ));\n          // console.log(boardList);\n          this.setState({\n            boardList: boardList,\n            author:writer\n          });\n        } else {\n          boardList = (\n            <tr>\n              <td colSpan=\"2\">작성한 게시글이 존재하지 않습니다.</td>\n            </tr>\n          );\n          this.setState({\n            author:writer,\n            boardList: boardList\n          });\n          // window.location.reload();\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const divStyle = {\n      marginTop: 50,\n      marginRight: 200,\n      marginLeft:200 \n    };\n    return (\n      <div>\n        <h2><strong>{this.state.author} 's Project</strong></h2>\n        <div style={divStyle}>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>날짜</th>\n                <th>글 제목</th>\n              </tr>\n            </thead>\n            <tbody>{this.state.boardList}</tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserDetail;","/root/molcam3/noMajor/test/src/BoardDetail.js",["55"],"import React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardDetail extends Component {\n  state = {\n    subject:\"\",\n    board: []\n  };\n\n  componentDidMount() { //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (this.props.location.query !== undefined) { //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n      this.getDetail();\n    } else {\n      window.location.href = \"/\";\n    }\n  }\n\n  deleteBoard = _id => {\n    const send_param = {\n      headers,\n      _id\n    };\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios\n        .post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n        //정상 수행\n        .then(returnData => {\n          alert(\"게시글이 삭제 되었습니다.\");\n          window.location.href = \"/\";\n        })\n        //에러\n        .catch(err => {\n          console.log(err);\n          alert(\"글 삭제 실패\");\n        });\n    }\n  };\n\n  getDetail = () => {\n    const send_param = {\n      headers,\n      _id: this.props.location.query._id\n    };\n    const marginBottom = {\n      marginBottom: 5\n    };\n    axios\n      .post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n      //정상 수행\n      .then(returnData => { //받아온 보드 데이터들 \n        if (returnData.data.board[0]) { //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n          const board = ( //받아온 보드 데이터를 아래 형식으로 표현\n            <div>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>{returnData.data.board[0].title}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td\n                      dangerouslySetInnerHTML={{ //\n                        __html: returnData.data.board[0].content\n                      }}\n                    ></td>\n                  </tr>\n                </tbody>\n              </Table>\n              <div>\n                <NavLink\n                  to={{\n                    pathname: \"/boardWrite\",\n                    query: {\n                      title: returnData.data.board[0].title,\n                      content: returnData.data.board[0].content,\n                      _id: this.props.location.query._id\n                    }\n                  }}\n                >\n                  <Button block className=\"my-3\">\n                    글 수정\n                  </Button>\n                </NavLink>\n                <Button\n                  block\n                  className=\"my-3\"\n                  onClick={this.deleteBoard.bind(\n                    null,\n                    this.props.location.query._id\n                  )}\n                >\n                  글 삭제\n                </Button>\n              </div>\n            </div>\n          );\n          this.setState({\n            subject: returnData.data.board[0].title,\n            board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n          });\n        } else {\n          alert(\"글 상세 조회 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //onClick={this.getBoard.bind(null,this.props._id)}\n  render() {\n    const divStyle = {\n      marginTop: 30,\n      marginLeft:200,\n      marginRight:200,\n      marginBottom:50\n    };\n    return (\n      <div>\n      <h2><strong>Subject : {this.state.subject}</strong></h2>\n      <div style={divStyle}>{this.state.board}</div>\n      </div>\n    ); //this.state.board 에 테이블이 들어감\n  }\n}\n\nexport default BoardDetail;","/root/molcam3/noMajor/test/src/MypageForm.js",[],"/root/molcam3/noMajor/test/src/ImageUpload.js",["56","57","58","59","60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":9},{"ruleId":"67","severity":1,"message":"71","line":8,"column":7,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":9},{"ruleId":"67","severity":1,"message":"72","line":48,"column":11,"nodeType":"69","messageId":"70","endLine":48,"endColumn":23},{"ruleId":"67","severity":1,"message":"73","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"74","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":15},{"ruleId":"67","severity":1,"message":"75","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":9},{"ruleId":"67","severity":1,"message":"71","line":10,"column":7,"nodeType":"69","messageId":"70","endLine":10,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":59,"column":20,"nodeType":"78","messageId":"79","endLine":59,"endColumn":32,"fix":"80"},{"ruleId":"81","severity":1,"message":"82","line":98,"column":29,"nodeType":"83","endLine":98,"endColumn":69},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'headers' is assigned a value but never used.","'marginBottom' is assigned a value but never used.","'useEffect' is defined but never used.","'Gallery' is defined but never used.","'styles' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"86","text":"87"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1209,1209],"()"]