[{"/root/notice_board_web/test/src/index.js":"1","/root/notice_board_web/test/src/Header.js":"2","/root/notice_board_web/test/src/Footer.js":"3","/root/notice_board_web/test/src/Body.js":"4","/root/notice_board_web/test/src/BoardWriteForm.js":"5","/root/notice_board_web/test/src/BoardForm.js":"6","/root/notice_board_web/test/src/BoardDetail.js":"7","/root/notice_board_web/test/src/LoginForm.js":"8","/root/notice_board_web/test/src/MypageForm.js":"9","/root/notice_board_web/test/src/UserDetail.js":"10"},{"size":374,"mtime":1626612899439,"results":"11","hashOfConfig":"12"},{"size":2243,"mtime":1626723304270,"results":"13","hashOfConfig":"12"},{"size":146,"mtime":1626322570056,"results":"14","hashOfConfig":"12"},{"size":1518,"mtime":1626675027730,"results":"15","hashOfConfig":"12"},{"size":3091,"mtime":1626703872002,"results":"16","hashOfConfig":"12"},{"size":2898,"mtime":1626724147862,"results":"17","hashOfConfig":"12"},{"size":3736,"mtime":1626703872002,"results":"18","hashOfConfig":"12"},{"size":6954,"mtime":1626703872002,"results":"19","hashOfConfig":"12"},{"size":1334,"mtime":1626629233177,"results":"20","hashOfConfig":"12"},{"size":3140,"mtime":1626719837050,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"tk8c71",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/root/notice_board_web/test/src/index.js",[],["44","45"],"/root/notice_board_web/test/src/Header.js",[],"/root/notice_board_web/test/src/Footer.js",[],"/root/notice_board_web/test/src/Body.js",[],"/root/notice_board_web/test/src/BoardWriteForm.js",[],"/root/notice_board_web/test/src/BoardForm.js",["46","47"],"/root/notice_board_web/test/src/BoardDetail.js",["48"],"import React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardDetail extends Component {\n  state = {\n    board: []\n  };\n\n  componentDidMount() { //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (this.props.location.query !== undefined) { //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n      this.getDetail();\n    } else {\n      window.location.href = \"/\";\n    }\n  }\n\n  deleteBoard = _id => {\n    const send_param = {\n      headers,\n      _id\n    };\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios\n        .post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n        //정상 수행\n        .then(returnData => {\n          alert(\"게시글이 삭제 되었습니다.\");\n          window.location.href = \"/\";\n        })\n        //에러\n        .catch(err => {\n          console.log(err);\n          alert(\"글 삭제 실패\");\n        });\n    }\n  };\n\n  getDetail = () => {\n    const send_param = {\n      headers,\n      _id: this.props.location.query._id\n    };\n    const marginBottom = {\n      marginBottom: 5\n    };\n    axios\n      .post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n      //정상 수행\n      .then(returnData => { //받아온 보드 데이터들 \n        if (returnData.data.board[0]) { //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n          const board = ( //받아온 보드 데이터를 아래 형식으로 표현\n            <div>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>{returnData.data.board[0].title}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td\n                      dangerouslySetInnerHTML={{ //\n                        __html: returnData.data.board[0].content\n                      }}\n                    ></td>\n                  </tr>\n                </tbody>\n              </Table>\n              <div>\n                <NavLink\n                  to={{\n                    pathname: \"/boardWrite\",\n                    query: {\n                      title: returnData.data.board[0].title,\n                      content: returnData.data.board[0].content,\n                      _id: this.props.location.query._id\n                    }\n                  }}\n                >\n                  <Button block className=\"my-3\">\n                    글 수정\n                  </Button>\n                </NavLink>\n                <Button\n                  block\n                  onClick={this.deleteBoard.bind(\n                    null,\n                    this.props.location.query._id\n                  )}\n                >\n                  글 삭제\n                </Button>\n              </div>\n            </div>\n          );\n          this.setState({\n            board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n          });\n        } else {\n          alert(\"글 상세 조회 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //onClick={this.getBoard.bind(null,this.props._id)}\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    return <div style={divStyle}>{this.state.board}</div>; //this.state.board 에 테이블이 들어감\n  }\n}\n\nexport default BoardDetail;","/root/notice_board_web/test/src/LoginForm.js",[],"/root/notice_board_web/test/src/MypageForm.js",[],"/root/notice_board_web/test/src/UserDetail.js",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":9},{"ruleId":"55","severity":1,"message":"59","line":8,"column":7,"nodeType":"57","messageId":"58","endLine":8,"endColumn":14},{"ruleId":"55","severity":1,"message":"60","line":47,"column":11,"nodeType":"57","messageId":"58","endLine":47,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":9},{"ruleId":"55","severity":1,"message":"61","line":97,"column":11,"nodeType":"57","messageId":"58","endLine":97,"endColumn":21},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'headers' is assigned a value but never used.","'marginBottom' is assigned a value but never used.","'titleStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]