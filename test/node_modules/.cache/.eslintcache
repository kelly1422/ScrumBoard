[{"/root/notice_board_web/test/src/index.js":"1","/root/notice_board_web/test/src/Header.js":"2","/root/notice_board_web/test/src/Footer.js":"3","/root/notice_board_web/test/src/Body.js":"4","/root/notice_board_web/test/src/BoardWriteForm.js":"5","/root/notice_board_web/test/src/BoardForm.js":"6","/root/notice_board_web/test/src/BoardDetail.js":"7","/root/notice_board_web/test/src/LoginForm.js":"8","/root/notice_board_web/test/src/MypageForm.js":"9"},{"size":391,"mtime":1626326331300,"results":"10","hashOfConfig":"11"},{"size":2115,"mtime":1626422531349,"results":"12","hashOfConfig":"11"},{"size":146,"mtime":1626322570056,"results":"13","hashOfConfig":"11"},{"size":1407,"mtime":1626349022290,"results":"14","hashOfConfig":"11"},{"size":2733,"mtime":1626595775969,"results":"15","hashOfConfig":"11"},{"size":2481,"mtime":1626421126036,"results":"16","hashOfConfig":"11"},{"size":3544,"mtime":1626504270116,"results":"17","hashOfConfig":"11"},{"size":6880,"mtime":1626421133788,"results":"18","hashOfConfig":"11"},{"size":1329,"mtime":1626352109124,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"tk8c71",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/root/notice_board_web/test/src/index.js",[],["41","42"],"/root/notice_board_web/test/src/Header.js",[],"/root/notice_board_web/test/src/Footer.js",[],"/root/notice_board_web/test/src/Body.js",[],"/root/notice_board_web/test/src/BoardWriteForm.js",["43"],"import React, { Component } from \"react\";\nimport { Button, Form, FormText} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nclass BoardWriteForm extends Component {\n  state = {\n    data: \"\"\n  };\n\n  componentDidMount() {\n    if (this.props.location.query !== undefined) {\n      this.boardTitle.value = this.props.location.query.title;\n    }\n  }\n\n  componentWillMount(){\n    if (this.props.location.query !== undefined) {\n      this.setState({\n        data: this.props.location.query.content\n      });\n    }\n  }\n\n  writeBoard = () => {\n    let url;\n    let send_param;\n\n    const boardTitle = this.boardTitle.value;\n    const boardContent = this.state.data;\n\n    if (boardTitle === undefined || boardTitle === \"\") {\n      alert(\"글 제목을 입력 해주세요.\");\n      boardTitle.focus();\n      return;\n    } else if (boardContent === undefined || boardContent === \"\") {\n      alert(\"글 내용을 입력 해주세요.\");\n      boardContent.focus();\n    }\n    \n    if (this.props.location.query !== undefined) {\n      url = \"http://172.10.18.151:80/board/update\";\n      send_param = {\n        headers,\n        \"_id\" : this.props.location.query._id,\n        \"title\": boardTitle,\n        \"content\": boardContent\n      };\n    } else {\n      url = \"http://172.10.18.151:80/board/write\";\n      send_param = {\n        headers,\n        \"_id\" : $.cookie(\"login_id\"),\n        \"title\": boardTitle,\n        \"content\": boardContent\n      };\n\n    }\n\n    axios\n      .post(url, send_param)\n      //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          alert(returnData.data.message);\n          window.location.href = \"/\";\n        } else {\n          alert(\"글쓰기 실패\");\n        }\n      })\n      //에러\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  onEditorChange = evt => {\n    this.setState({\n      data: evt.editor.getData()\n    });\n  };\n\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    const titleStyle = {\n      marginBottom: 5\n    };\n    const buttonStyle = {\n      marginTop: 5\n    };\n\n    return (\n      <div style={divStyle} className=\"App\">\n        <h2>글쓰기</h2>\n        <Form.Control\n          type=\"text\"\n          style={titleStyle}\n          placeholder=\"글 제목\"\n          ref={ref => (this.boardTitle = ref)}\n        />\n        <textarea\n          data={this.state.data}\n          onChange={this.onEditorChange}\n        ></textarea>\n        <Button style={buttonStyle} onClick={this.writeBoard} block>\n          저장하기\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default BoardWriteForm;","/root/notice_board_web/test/src/BoardForm.js",[],"/root/notice_board_web/test/src/BoardDetail.js",[],"/root/notice_board_web/test/src/LoginForm.js",[],"/root/notice_board_web/test/src/MypageForm.js",["44","45"],"import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport CKeditor from \"ckeditor4-react\" \nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nconst MypageForm = () => {\n  const divStyle = {\n    margin: 50\n  };\n  const marginBottom = {\n    marginBottom : 5\n  };\n  return (\n    <>\n      <div style={divStyle}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>email</Form.Label>\n        <Form.Control type=\"email\" disabled value={$.cookie(\"login_email\")}/>\n        <Form.Label>name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter email\" />\n        <Form.Label>password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Enter password\" />\n        <Form.Label>new password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Enter New Password\" />\n        <Form.Label>new password check</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Enter New Password Check\" />\n      </Form.Group>\n      <Button variant=\"primary\"  block style={marginBottom}>\n      회원정보 수정\n      </Button>\n      <Button variant=\"primary\" block>\n      회원 탈퇴\n      </Button>\n      </div>\n    </>\n  );\n};\n\nexport default MypageForm;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":24,"nodeType":"52","messageId":"53","endLine":2,"endColumn":32},{"ruleId":"50","severity":1,"message":"54","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":8,"column":7,"nodeType":"52","messageId":"53","endLine":8,"endColumn":14},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'FormText' is defined but never used.","Identifier","unusedVar","'CKeditor' is defined but never used.","'headers' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]